@import './variables';

@mixin led-color($color, $color-on, $color-off) {
  &-#{$color} {
    &-on {
      background-color: $color-on;
    }

    &-off {
      background-color: $color-off;
    }
  }
}

@mixin out-border() {
  :host {
    display: block;
    box-sizing: border-box;
    padding: $distance_min;
    border: solid $thin_border $black;
    margin-bottom: $distance_min * 2;

    -webkit-box-shadow: $distance_min $distance_min 0 0 $black;
    -moz-box-shadow: $distance_min $distance_min 0 0 $black;
    box-shadow: $distance_min $distance_min 0 0 $black;

  }
}

@mixin shadow() {
  .shadow {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      margin: 0;
      padding: 0;
      background-color: rgba(0, 0, 0, .5);
      z-index: 999;
      display: flex;
      justify-content: center;
      align-content: center;
      align-items: center;
  }
}

@mixin border-radius($radius, $width, $color, $style) {
  border: $style $width $color;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin font-sizes($multiplicator: 1) {
  @media all and (max-width: $breakpoint-xl) {
    font-size: $text-xl * $multiplicator;
  }
  @media all and (max-width: $breakpoint-l) {
    font-size: $text-l * $multiplicator;
  }
  @media all and (max-width: $breakpoint-m) {
    font-size: $text-m * $multiplicator;
  }
  @media all and (max-width: $breakpoint-s) {
    font-size: $text-s * $multiplicator;
  }
}
